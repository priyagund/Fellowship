package com.bridgelabz.oops;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import org.codehaus.jackson.JsonParseException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;

import com.bridgelabz.model.Company;
import com.bridgelabz.model.CompanyModel;
import com.bridgelabz.model.Customer;
import com.bridgelabz.model.CustomerModel;
import com.bridgelabz.model.Transaction;
import com.bridgelabz.model.TransactionModel;
import com.bridgelazs.utility.Utility;

public class StockAccount {
	public static void main(String[] args) throws JsonParseException, JsonMappingException, IOException {

		TransactionModel transmodel = new TransactionModel();
		CompanyModel companymodel = new CompanyModel();
		CustomerModel customermodel = new CustomerModel();

		ObjectMapper mapper = new ObjectMapper();

		String pathoftransaction = "/home/bridgeit/Desktop/priya/Felloship/CorePrograms/files/json files/transaction.json";
		String pathofcompany = "/home/bridgeit/Desktop/priya/Felloship/CorePrograms/files/json files/companyinfo.json";
		String pathofcustomer = "/home/bridgeit/Desktop/priya/Felloship/CorePrograms/files/json files/customerinfo.json";

		ArrayList<Transaction> transactions = new ArrayList<Transaction>();
		ArrayList<Company> companies = new ArrayList<Company>();
		ArrayList<Customer> customers = new ArrayList<Customer>();

		File file = new File(pathofcompany);
		if (file.length() != 0) {
			companymodel = mapper.readValue(new File(pathofcompany), companymodel.getClass());
			companies.addAll(companymodel.getCompanies());
		}
		file = new File(pathofcustomer);
		if (file.length() != 0) {
			customermodel = mapper.readValue(new File(pathofcustomer), customermodel.getClass());
			customers.addAll(customermodel.getCustomers());
		}
		file = new File(pathoftransaction);
		if (file.length() != 0) {
			transmodel = mapper.readValue(new File(pathoftransaction), transmodel.getClass());
			transactions.addAll(transmodel.getTransactions());
		}
System.out.println("HEllpo0");
		boolean isExit = true;
		while (!isExit) {
			System.out.println("1. buy\n2.sell\n3.save\n4.print report");
			switch (Utility.getInt()) {
			case 1:
				// buy
				
				break;
			case 2:
				// sell
				break;
			case 3:
				// save
				break;
			case 4:
				// print report
				break;

			default:
				System.out.println("Invalid input");
				break;
			}

		}
	}

}
